// Copyright 2019 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
// Super Shotgun
//
//===========================================================================

class ZPerkSuperShotgun : SuperShotgun
{
	mixin AccurateHitscanWeapon;

	Default
	{
		Weapon.SlotNumber 3;
		Decal "BulletChip";
	}

	action void A_SwapSprites(void)
	{
		let psp = player.FindPSprite(PSP_WEAPON);
		psp.Sprite = GetSpriteIndex("PKS2");
		if (ZPerkHandler.CheckCVar('zperk_blackgloves', player)) psp.Sprite = GetSpriteIndex("BKS2");
	}

	States
	{
	Select:
		TNT1 A 1 { A_SwapSprites(); A_Raise(); if (zperk_responsive) A_Raise(); }
		Loop;
	Deselect:
		TNT1 A 1 { A_SwapSprites(); A_Lower(); if (zperk_responsive) A_Lower(); }
		Loop;
	Ready:
		TNT1 A 1 { A_SwapSprites(); A_WeaponReady(); }
		Loop;
	Fire:
		TNT1 A 0 A_SwapSprites();
		"####" A 3 { if (zperk_responsive) A_SetTics(0); }
		"####" A 5 { while(toggleAccurate()) A_FireShotgun2(); }
		"####" "#" 0 { if (zperk_responsive) A_SetTics(3); }
		"####" BC 3;
		"####" D 3;

		"####" "#" 0 A_CheckReload();
		"####" E 5;
		"####" F 2;

		"####" "#" 0 A_OpenShotgun2();
		"####" G 2;
		"####" HIJK 3;

		"####" "#" 0 A_LoadShotgun2();
		"####" L 2;
		"####" M 3;
		"####" NOPQ 2;

		"####" "#" 0 A_CloseShotgun2();
		"####" RS 3;

		"####" A 5 A_ReFire();
		Goto Ready;
	Flash:
		SHT2 J 3 Bright A_Light2();
		SHT2 I 2 Bright A_Light1();
		Goto LightDone;

	SwapSprites:
		PKS2 A 0; BKS2 A 0;
		Stop;
	}
}